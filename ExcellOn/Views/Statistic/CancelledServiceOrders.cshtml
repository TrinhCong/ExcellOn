@{ Layout = "~/Views/Shared/_StatisticLayout.cshtml"; }

@section AdditionStyles{


}

<style>
    [readonly] {
        background-color: #FFF !important;
    }
</style>

<div class=" no-margin">
    <div class="content-title">
        <div class="caption">
            <span class="caption-subject font-green-sharp bold uppercase">Cancelled service orders Management</span>
        </div>
    </div>
    <div class="content-body">
        <div class="table-toolbar">
            <div class="row">
                <div class="col-md-6">
                </div>
            </div>
        </div>
        <table id="order_tbl" class="display table table-striped" style="width:100%"></table>
    </div>
</div>

<div class="modal fade" id="view_modal" data-backdrop="false" tabindex="1" role="dialog" aria-labelledby="view_modal_title" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form>
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="view_modal_title">Detail Service Categories</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        Progressing.....
                    </div>

                </div>
                <div class="modal-footer">
                    <div style="margin:auto">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>


@section AdditionScripts{
    <script>
        class PageHandler {
            constructor() {
                var instance = this;
                instance.$table = $("#order_tbl");
                instance.$viewMd = $("#view_modal");
                instance.initTable();
            }
            initTable() {
                var instance = this;
                instance.dtTable = instance.$table.DataTable({
                    "processing": true,
                    "serverSide": false,
                    "filter": true,
                    "datatype": "json",
                    "ajax": {
                        type: "get",
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        url: "/Statistic/GetCancelledServiceOrders",
                        //data: function (d) {
                        //    d.search.value = $(".dataTables_filter input").val();
                        //    return JSON.stringify(d);
                        //},
                    },
                    "bStateSave": true, // save datatable state(pagination, sort, etc) in cookie.

                    "lengthMenu": [
                        [5, 15, 20, -1],
                        [5, 15, 20, "All"] // change per page values here
                    ],
                    // set the initial value
                    "pageLength": 5,
                    columns: [
                        {
                            title: 'Registered date',
                            data: 'registered_date'
                        },
                        {
                            title: 'Service',
                            data: 'service.name'
                        },
                        {
                            title: 'Customer',
                            data: 'user.display_name'
                        },
                        {
                            title: 'Phone Number',
                            data: 'user.phone_number'
                        },
                        {
                            title: 'Expired Date',
                            data: 'expired_date',
                        },
                        {
                            title: 'Cancel date',
                            data: 'cancel_date',
                        },
                        {
                            title: 'Message',
                            data: 'message',
                        },
                        {
                            title: 'Pay Type',
                            data: 'pay_type.name',
                        },
                        //{
                        //    title: 'Actions',
                        //    render: function (data, type, row, meta) {
                        //        return `<a class="btn btn-sm btn-primary view-item" role="button" data-toggle="modal" href="#view_modal" aria-expanded="false">
                        //                                        View
                        //                                        <i class="fa fa-eye"></i>
                        //                                    </a>
                        //                                    <a class="btn btn-sm btn-success confirm-item" role="button" aria-expanded="false">
                        //                                        Confirmed
                        //                                        <i class=" fa fa-check-circle"></i>
                        //                                    </a>`;
                        //    },
                        //    width: '220px',
                        //    className: 'text-center'
                        //}
                    ],
                    //columnDefs: [
                    //    {
                    //        orderable: false,
                    //        targets: [6]
                    //    }
                    //],
                    "initComplete": function (settings, json) {
                        instance.bindEvents();
                    }
                });

            }
            bindEvents() {
                var instance = this;
                instance.$table.find('a.confirm-item').on('click', (e) => {
                    EXO.alert("Confirmed Order! Now you're in charge to take this customer!");
                });
                instance.$table.find('a.view-item').on('click', (e) => {

                });
            }
            reloadTable() {
                var instance = this;
                instance.dtTable.ajax.reload(() => { instance.bindEvents(); }, true);
            }
            bindViewData(data) {

            }
        }
        var UserHandler = null;
        $(document).ready(function () {
            UserHandler = new PageHandler();
        });
    </script>
}





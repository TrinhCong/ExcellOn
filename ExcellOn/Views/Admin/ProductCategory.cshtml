@{ Layout = "~/Views/Shared/_AdminLayout.cshtml"; }

@section AdditionStyles{


}
<style>
    [readonly] {
        background-color: #FFF !important;
    }
</style>

<div class=" no-margin">
    <div class="content-title">
        <div class="caption">
            <span class="caption-subject font-green-sharp bold uppercase">User Management</span>
        </div>
    </div>
    <div class="content-body">
        <div class="table-toolbar">
            <div class="row">
                <div class="col-md-6">
                    <a class="btn btn-sm btn-success" data-toggle="modal" data-target="#create_modal">
                        Add New
                        <i class="fa fa-plus"></i>
                    </a>
                </div>
            </div>
        </div>
        <table id="product_category" class="display table table-striped" style="width:100%"></table>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="create_modal" data-backdrop="false" tabindex="1" role="dialog" aria-labelledby="create_modal_title" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form>
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="create_modal_title">Add New</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="" class="control-label">Category Name<span class="required">*</span></label>
                        <input type="text" class="form-control" name="name" required />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Description<span class="required">*</span></label>
                        <textarea class="form-control" name="description" rows="3" required>
                        </textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <div style="margin:auto">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary create">Save changes</button>
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>

<div class="modal fade" id="edit_modal" data-backdrop="false" tabindex="1" role="dialog" aria-labelledby="update_modal_title" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form>
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="update_modal_title">Update</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" class="form-control" name="id" required />
                    <div class="form-group">
                        <label for="" class="control-label">Full Name<span class="required">*</span></label>
                        <input type="text" class="form-control" name="display_name" required />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">User Name<span class="required">*</span></label>
                        <input type="text" class="form-control" name="user_name" required />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Password<span class="required">*</span></label>
                        <input type="password" class="form-control" name="password" required />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Role<span class="required">*</span></label>
                        <select name="role_id" class="form-control" required>
                            <option value="1">
                                Super Admin
                            </option>
                            <option value="2">
                                Admin
                            </option>
                            <option value="3">
                                Client
                            </option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">phone_number<span class="required">*</span></label>
                        <input type="text" class="form-control" name="phone_number" required />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">email<span class="required">*</span></label>
                        <input type="text" class="form-control" name="email" required />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">address<span class="required">*</span></label>
                        <input type="text" class="form-control" name="address" required />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Gender<span class="required">*</span></label>
                        <select name="gender" class="form-control" required>
                            <option value="1">Male</option>
                            <option value="0">Female</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Date Of Birth<span class="required">*</span></label>
                        <input type="date" class="form-control" name="date_of_birth" required />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Avatar </label>
                        <input type="file" class="form-control" name="avatar" />
                    </div>
                </div>
                <div class="modal-footer">
                    <div style="margin:auto">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary update">Save changes</button>
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>


<div class="modal fade" id="view_modal" data-backdrop="false" tabindex="1" role="dialog" aria-labelledby="view_modal_title" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form>
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="view_modal_title">Detail</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="" class="control-label">Avatar </label>
                        <div style="margin:auto; width:120px;">
                            <img src="~/Content/images/no_avatar.png" width="120" />
                        </div>

                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Full Name</label>
                        <input type="text" class="form-control" name="display_name" readonly />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">User Name</label>
                        <input type="text" class="form-control" name="user_name" readonly />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Role</label>
                        <select name="role_id" class="form-control" readonly>
                            <option value="1">
                                Super Admin
                            </option>
                            <option value="2">
                                Admin
                            </option>
                            <option value="3">
                                Client
                            </option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">phone_number</label>
                        <input type="text" class="form-control" name="phone_number" readonly />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">email</label>
                        <input type="text" class="form-control" name="email" readonly />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">address</label>
                        <input type="text" class="form-control" name="address" readonly />
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Gender</label>
                        <select name="gender" class="form-control">
                            <option value="1">Male</option>
                            <option value="0">Female</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Date Of Birth</label>
                        <input type="date" class="form-control" name="date_of_birth" readonly />
                    </div>
                </div>
                <div class="modal-footer">
                    <div style="margin:auto">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>

@section AdditionScripts{
    <script>
        class PageHandler {
            constructor() {
                var instance = this;
                instance.$table = $("#product_category");
                instance.$createMd = $("#create_modal");
                instance.$createMd.find(".create").on('click', (e) => {
                    e.preventDefault();
                    instance.create();
                });
                instance.$createMd.find("[data-dismiss]").on('click', (e) => {
                    instance.$createMd.find("form")[0].reset();
                });

                instance.$editMd = $("#edit_modal");
                instance.$editMd.find(".update").on('click', (e) => {
                    e.preventDefault();
                    instance.edit();
                });
                instance.$viewMd = $("#view_modal");
                instance.initTable();
            }
            initTable() {
                var instance = this;
                instance.dtTable = instance.$table.DataTable({
                    "processing": true,
                    "serverSide": false,
                    "filter": true,
                    "datatype": "json",
                    "ajax": {
                        type: "get",
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        url: "/Product/GetAllCategories",
                        //data: function (d) {
                        //    d.search.value = $(".dataTables_filter input").val();
                        //    return JSON.stringify(d);
                        //},
                    },
                    "bStateSave": true, // save datatable state(pagination, sort, etc) in cookie.

                    "lengthMenu": [
                        [5, 15, 20, -1],
                        [5, 15, 20, "Tất cả"] // change per page values here
                    ],
                    // set the initial value
                    "pageLength": 5,

                    columns: [
                        {
                            title: 'Category Name',
                            data: 'name'
                        },
                        {
                            title: 'Description',
                            data: 'description'
                        },
                        {
                            title: 'Actions',
                            render: function (data, type, row, meta) {
                                return `<a class="btn btn-sm btn-primary view-item" role="button" data-toggle="modal" href="#view_modal" aria-expanded="false">
                                                    View
                                                    <i class="fa fa-eye"></i>
                                                </a>
                                                <a class="btn btn-sm btn-warning edit-item" role="button" data-toggle="modal" href="#edit_modal" aria-expanded="false">
                                                    Edit
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                                <a class="btn btn-sm btn-danger delete-item" role="button" aria-expanded="false">
                                                    Delete
                                                    <i class="fa fa-trash"></i>
                                                </a>`;
                            },
                            width: '220px',
                            className: 'text-center'
                        }
                    ],
                    columnDefs: [
                        {
                            orderable: false,
                            targets: [2]
                        }
                    ],

                    "initComplete": function (settings, json) {
                        instance.$table.find('tbody').on('click', '.delete-item', (e) => {
                            e.preventDefault();
                            var selectedRow = $(this).parents('tr')[0];
                            var data = instance.dtTable.row(selectedRow).data();
                            instance.delete(data);
                        });
                        instance.$table.find('tbody').on('click', '.edit-item', (e) => {
                            e.preventDefault();
                            var selectedRow = $(this).parents('tr')[0];
                            var data = instance.dtTable.row(selectedRow).data();
                            instance.bindEditData(data);
                        });
                        instance.$table.find('tbody').on('click', '.view-item', (e) => {
                            e.preventDefault();
                            var selectedRow = $(this).parents('tr')[0];
                            var data = instance.dtTable.row(selectedRow).data();
                            instance.bindViewData(data);
                        });
                    }
                });

            }
            createValidation() {
                var instance = this;
                instance.createData = {};
                let isValid = true;
                $.each(this.$createMd.find("[name][required]"), (index, item) => {
                    if ($(item).val() == "") {
                        isValid = false;
                        EXO.alert("Please enter all infomation on this form!");
                    }
                    else {
                        instance.createData[$(item).attr("name")] = $(item).val();
                    }
                });
                return isValid;
            }
            create() {
                var instance = this;
                if (instance.createValidation()) {
                    var data = new FormData();
                    $.ajax({
                        url: '/Product/CreateOrUpdateCategory',
                        type: 'POST',
                        data: instance.createData,
                        dataType: 'json',
                        success(response, textStatus, jqXHR) {
                            if (response.success) {
                                instance.$createMd.find("form")[0].reset();
                                instance.dtTable.ajax.reload();
                                instance.$createMd.hide();
                            }
                            EXO.alert(response.message);
                        },
                        error(jqXHR, textStatus, errorThrown) {
                            EXO.alert('Tạo mới thất bại!');
                        }
                    });

                }
            }
            bindViewData(data) {
                var instance = this;
                var $form = instance.$viewMd.find("form");
                $.each(data, (key, value) => {
                    var item = $form.find(`[name=${key}]`);
                    if (item.length > 0)
                        item.val(value);
                });

                var avatarSrc = data.avatar_path && data.avatar_path != "null" ? "/Content/uploads/avatars/" + data.avatar_path : "/Content/images/no_avatar.png";
                $form.find('img').attr('src', avatarSrc)
            }
            bindEditData(data) {
                var instance = this;
                var $form = instance.$editMd.find("form");
                $.each(data, (key, value) => {
                    var item = $form.find(`[name=${key}]`);
                    if (item.length > 0)
                        item.val(value);
                });
            }
            editValidation() {
                var instance = this;
                instance.editData = {};
                let isValid = true;
                $.each(this.$editMd.find("[name][required]"), (index, item) => {
                    if ($(item).val() == "") {
                        isValid = false;
                        EXO.alert("Please enter all infomation on this form!");
                    }
                    else {
                        instance.editData[$(item).attr("name")] = $(item).val();
                    }
                });
                return isValid;
            }
            edit() {
                var instance = this;
                if (instance.editValidation()) {
                    var data = new FormData();
                    $.ajax({
                        url: '/Product/CreateOrUpdateCategory',
                        type: 'POST',
                        data: instance.editData,
                        dataType: 'json',
                        success(response, textStatus, jqXHR) {
                            if (response.success) {
                                instance.$editMd.find("form")[0].reset();
                                instance.dtTable.ajax.reload();
                                instance.$editMd.hide();
                            }
                            EXO.alert(response.message);
                        },
                        error(jqXHR, textStatus, errorThrown) {
                            EXO.alert('Cập nhật thất bại!');
                        }
                    });

                }
            }
            delete(data) {
                var instance = this;
                EXO.confirm("Bạn có chắc muốn xóa tài khoản người dùng này?", response => {
                    if (response.value)
                        $.ajax({
                            url: "/Product/DeleteCategory",
                            data: { id: data.id },
                            type: 'get'
                        }).done(function (response) {
                            if (response.success) {
                                instance.$createMd.find("form")[0].reset();
                                instance.dtTable.ajax.reload();
                                instance.$createMd.hide();
                            }
                            if (response.message && response.message != "null")
                                EXO.alert("Cannot delete this category, Because It's used by another products!");
                        });
                });
            }
        }

        $(document).ready(function () {
            new PageHandler();
        });
    </script>
}




